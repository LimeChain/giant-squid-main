type NFTCollection @entity {
  id: ID!
  holders: [NFTHolder!] @derivedFrom(field: "collection")
  tokens: [NFTToken!] @derivedFrom(field: "collection")
  transfers: [NFTTransfer!] @derivedFrom(field: "collection")
}

type NFTTransfer @entity {
  id: ID!
  timestamp: DateTime!
  blockNumber: Int! @index
  extrinsicHash: String! @index
  from: Account! @index
  to: Account! @index
  tokens: [NFTTokenTransfer!]! @derivedFrom(field: "transfer")
  collection: NFTCollection! @index
}

type NFTToken @entity {
  id: ID!
  tokenId: String! @index
  collection: NFTCollection! @index
  owner: Account! @index
  metadataIpfs: String
  standard: NFTTokenStandard!
  transfers: [NFTTokenTransfer!]! @derivedFrom(field: "token")
}

# Helper entity to allow for transfers derivation if NFTToken entity
type NFTTokenTransfer @entity {
  id: ID!
  token: NFTToken! @index
  transfer: NFTTransfer! @index
}
